// ROLLUP_NO_REPLACE 
 const peeking = "{\"parsed\":{\"_path\":\"/peeking\",\"_dir\":\"\",\"_draft\":false,\"_partial\":false,\"_locale\":\"\",\"title\":\"Peeking\",\"description\":\"\",\"body\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"basic-peeking\"},\"children\":[{\"type\":\"text\",\"value\":\"Basic peeking\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"This is an example of implementing peeking on the right side only, which is useful for teasing the presence of other cards.\"}]},{\"type\":\"element\",\"tag\":\"demos-peeking-basic\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-vue\"],\"code\":\"<ssr-carousel :slides-per-page=\\\"2\\\" :peek-right=\\\"40\\\">\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n  <slide :index=\\\"4\\\"></slide>\\n  <slide :index=\\\"5\\\"></slide>\\n</ssr-carousel>\\n\",\"language\":\"vue\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<ssr-carousel :slides-per-page=\\\"2\\\" :peek-right=\\\"40\\\">\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n  <slide :index=\\\"4\\\"></slide>\\n  <slide :index=\\\"5\\\"></slide>\\n</ssr-carousel>\\n\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"peeking-with-loop\"},\"children\":[{\"type\":\"text\",\"value\":\"Peeking with loop\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"You should add \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"loop\"}]},{\"type\":\"text\",\"value\":\" when using a left peek so that space is filled on the first page.\"}]},{\"type\":\"element\",\"tag\":\"demos-peeking-loop\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-vue\"],\"code\":\"<ssr-carousel loop peek-left=\\\"40\\\" peek-right=\\\"40\\\">\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n</ssr-carousel>\\n\",\"language\":\"vue\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<ssr-carousel loop peek-left=\\\"40\\\" peek-right=\\\"40\\\">\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n</ssr-carousel>\\n\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"peeking-slides-may-be-cloned\"},\"children\":[{\"type\":\"text\",\"value\":\"Peeking slides may be cloned\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Note how there is only one more slide than the amount we're showing per page. The last slide gets cloned so it peeks in on both the left and right sides. This example also uses the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"peek\"}]},{\"type\":\"text\",\"value\":\" shorthand that sets both \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"peek-left\"}]},{\"type\":\"text\",\"value\":\" and \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"peek-right\"}]},{\"type\":\"text\",\"value\":\" to the same value.\"}]},{\"type\":\"element\",\"tag\":\"demos-peeking-cloning\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n\\n\\n\"},{\"type\":\"element\",\"tag\":\"demos-peeking-visual\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-vue\"],\"code\":\"<ssr-carousel loop :slides-per-page=\\\"3\\\" :peek=\\\"40\\\" show-arrows>\\n  <slide\\n    v-for=\\\"(color, index) in ['red', 'orange', 'yellow', 'green']\\\"\\n    :key=\\\"color\\\"\\n    :index=\\\"index + 1\\\"\\n    :tint=\\\"color\\\">\\n  </slide>\\n</ssr-carousel>\\n\\n<ssr-carousel\\n  loop\\n  :slides-per-page=\\\"2\\\"\\n  :peek=\\\"80\\\"\\n  paginate-by-slide\\n  show-arrows\\n>\\n    <NuxtImg\\n        src=\\\"https://via.placeholder.com/1920x1080/BA3298/FFFFFF?text=Slide+1\\\"\\n        loading=\\\"lazy\\\"\\n        width=\\\"1920\\\"\\n        height=\\\"1080\\\">\\n    </NuxtImg>\\n    <NuxtImg\\n        src=\\\"https://via.placeholder.com/1920x1080/5E339E/FFFFFF?text=Slide+2\\\"\\n        loading=\\\"lazy\\\"\\n        width=\\\"1920\\\"\\n        height=\\\"1080\\\">\\n    </NuxtImg>\\n    <NuxtImg\\n        src=\\\"https://via.placeholder.com/1920x1080/315AAD/FFFFFF?text=Slide+3\\\"\\n        loading=\\\"lazy\\\"\\n        width=\\\"1920\\\"\\n        height=\\\"1080\\\">\\n    </NuxtImg>\\n</ssr-carousel>\\n\",\"language\":\"vue\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<ssr-carousel loop :slides-per-page=\\\"3\\\" :peek=\\\"40\\\" show-arrows>\\n  <slide\\n    v-for=\\\"(color, index) in ['red', 'orange', 'yellow', 'green']\\\"\\n    :key=\\\"color\\\"\\n    :index=\\\"index + 1\\\"\\n    :tint=\\\"color\\\">\\n  </slide>\\n</ssr-carousel>\\n\\n<ssr-carousel\\n  loop\\n  :slides-per-page=\\\"2\\\"\\n  :peek=\\\"80\\\"\\n  paginate-by-slide\\n  show-arrows\\n>\\n    <NuxtImg\\n        src=\\\"https://via.placeholder.com/1920x1080/BA3298/FFFFFF?text=Slide+1\\\"\\n        loading=\\\"lazy\\\"\\n        width=\\\"1920\\\"\\n        height=\\\"1080\\\">\\n    </NuxtImg>\\n    <NuxtImg\\n        src=\\\"https://via.placeholder.com/1920x1080/5E339E/FFFFFF?text=Slide+2\\\"\\n        loading=\\\"lazy\\\"\\n        width=\\\"1920\\\"\\n        height=\\\"1080\\\">\\n    </NuxtImg>\\n    <NuxtImg\\n        src=\\\"https://via.placeholder.com/1920x1080/315AAD/FFFFFF?text=Slide+3\\\"\\n        loading=\\\"lazy\\\"\\n        width=\\\"1920\\\"\\n        height=\\\"1080\\\">\\n    </NuxtImg>\\n</ssr-carousel>\\n\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"peeking-values-are-responsive-and-support-css-units\"},\"children\":[{\"type\":\"text\",\"value\":\"Peeking values are responsive and support CSS units\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"This example also uses the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"feather\"}]},{\"type\":\"text\",\"value\":\" prop with a boolean value.\"}]},{\"type\":\"element\",\"tag\":\"demos-peeking-responsive\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-vue\"],\"code\":\"<ssr-carousel\\n  :slides-per-page=\\\"2\\\"\\n  paginate-by-slide\\n  loop\\n  peek=\\\"10%\\\"\\n  feather\\n  :responsive=\\\"[\\n    {\\n      maxWidth: 767,\\n      gutter: 10,\\n      peek: 20\\n    }\\n  ]\\\"\\n>\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n</ssr-carousel>\\n\",\"language\":\"vue\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<ssr-carousel\\n  :slides-per-page=\\\"2\\\"\\n  paginate-by-slide\\n  loop\\n  peek=\\\"10%\\\"\\n  feather\\n  :responsive=\\\"[\\n    {\\n      maxWidth: 767,\\n      gutter: 10,\\n      peek: 20\\n    }\\n  ]\\\"\\n>\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n</ssr-carousel>\\n\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"sync-with-gutter-setting\"},\"children\":[{\"type\":\"text\",\"value\":\"Sync with gutter setting\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"The \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"peek-gutter\"}]},{\"type\":\"text\",\"value\":\" prop uses your gutter value for the prop. This is useful setting when your \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"vue-ssr-carousel\"}]},{\"type\":\"text\",\"value\":\" instance is flush with the edges of your browser and you use your site gutter value; the slides will transition out the edge of the page. Then, use the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"feather\"}]},{\"type\":\"text\",\"value\":\" with \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"responsive\"}]},{\"type\":\"text\",\"value\":\" to automatically add a light feathering mask when the viewport is wider than the carousel width.\"}]},{\"type\":\"element\",\"tag\":\"demos-peeking-gutters\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-vue\"],\"code\":\"<ssr-carousel\\n  :slides-per-page=\\\"3\\\"\\n  paginate-by-slide\\n  loop\\n  peek-gutter\\n  gutter=\\\"var(--fluid-gutter)\\\"\\n  :responsive=\\\"[\\n    {\\n      minWidth: 1440,\\n      feather: 'calc(var(--fluid-gutter) * 0.5)'\\n    },\\n    {\\n      maxWidth: 768,\\n      slidesPerPage: 2\\n    },\\n    {\\n      maxWidth: 500,\\n      slidesPerPage: 1\\n    }\\n  ]\\\"\\n>\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n  <slide :index=\\\"4\\\"></slide>\\n  <slide :index=\\\"5\\\"></slide>\\n</ssr-carousel>\\n<style lang=\\\"scss\\\">\\nbody {\\n  --fluid-gutter: 40px, 20px;\\n}\\n</style>\\n\",\"language\":\"vue\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<ssr-carousel\\n  :slides-per-page=\\\"3\\\"\\n  paginate-by-slide\\n  loop\\n  peek-gutter\\n  gutter=\\\"var(--fluid-gutter)\\\"\\n  :responsive=\\\"[\\n    {\\n      minWidth: 1440,\\n      feather: 'calc(var(--fluid-gutter) * 0.5)'\\n    },\\n    {\\n      maxWidth: 768,\\n      slidesPerPage: 2\\n    },\\n    {\\n      maxWidth: 500,\\n      slidesPerPage: 1\\n    }\\n  ]\\\"\\n>\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n  <slide :index=\\\"4\\\"></slide>\\n  <slide :index=\\\"5\\\"></slide>\\n</ssr-carousel>\\n<style lang=\\\"scss\\\">\\nbody {\\n  --fluid-gutter: 40px, 20px;\\n}\\n</style>\\n\"}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"This also works well without looping. Note how the peeking card switches to the left edge on the final page but the gutter on the right edge is perseved.\"}]},{\"type\":\"element\",\"tag\":\"demos-peeking-loopless-gutter\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-vue\"],\"code\":\"<ssr-carousel\\n  :slides-per-page=\\\"3\\\"\\n  paginate-by-slide\\n  peek-left=\\\"var(--fluid-gutter)\\\"\\n  peek-right=\\\"calc(var(--fluid-gutter) + 30px)\\\"\\n  gutter=\\\"var(--fluid-gutter)\\\"\\n  :responsive=\\\"[\\n    {\\n      minWidth: 1440,\\n      feather: 'calc(var(--fluid-gutter) * 0.5)'\\n    },\\n    {\\n      maxWidth: 768,\\n      slidesPerPage: 2\\n    },\\n    {\\n      maxWidth: 500,\\n      slidesPerPage: 1\\n    }\\n  ]\\\"\\n>\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n  <slide :index=\\\"4\\\"></slide>\\n  <slide :index=\\\"5\\\"></slide>\\n</ssr-carousel>\\n\",\"language\":\"vue\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<ssr-carousel\\n  :slides-per-page=\\\"3\\\"\\n  paginate-by-slide\\n  peek-left=\\\"var(--fluid-gutter)\\\"\\n  peek-right=\\\"calc(var(--fluid-gutter) + 30px)\\\"\\n  gutter=\\\"var(--fluid-gutter)\\\"\\n  :responsive=\\\"[\\n    {\\n      minWidth: 1440,\\n      feather: 'calc(var(--fluid-gutter) * 0.5)'\\n    },\\n    {\\n      maxWidth: 768,\\n      slidesPerPage: 2\\n    },\\n    {\\n      maxWidth: 500,\\n      slidesPerPage: 1\\n    }\\n  ]\\\"\\n>\\n  <slide :index=\\\"1\\\"></slide>\\n  <slide :index=\\\"2\\\"></slide>\\n  <slide :index=\\\"3\\\"></slide>\\n  <slide :index=\\\"4\\\"></slide>\\n  <slide :index=\\\"5\\\"></slide>\\n</ssr-carousel>\\n\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"supply-your-own-overflowhidden\"},\"children\":[{\"type\":\"text\",\"value\":\"Supply your own overflow:hidden\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Add the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"overflow-visible\"}]},{\"type\":\"text\",\"value\":\" prop to supply your own \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"overflow: hidden\"}]},{\"type\":\"text\",\"value\":\", for cases where you want to prevent the width of the carousel from expanding but do want the carousel to extend to the edges of the page. It makes the most sense with a big \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"className\":[]},\"children\":[{\"type\":\"text\",\"value\":\"peek-right\"}]},{\"type\":\"text\",\"value\":\" that hints at other slides.\"}]},{\"type\":\"element\",\"tag\":\"demos-peeking-overflow-visible\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-vue\"],\"code\":\"<div style=\\\"overflow: hidden\\\">\\n  <ssr-carousel\\n    :slides-per-page=\\\"2\\\"\\n    paginate-by-slide\\n    gutter=\\\"20\\\"\\n    peek-left=\\\"var(--fluid-gutter)\\\"\\n    peek-right=\\\"20%\\\"\\n    overflow-visible\\n    :responsive=\\\"[\\n      {\\n        maxWidth: 768,\\n        slidesPerPage: 1,\\n        gutter: 10,\\n      }\\n    ]\\\">\\n    <slide :index=\\\"1\\\"></slide>\\n    <slide :index=\\\"2\\\"></slide>\\n    <slide :index=\\\"3\\\"></slide>\\n    <slide :index=\\\"4\\\"></slide>\\n    <slide :index=\\\"5\\\"></slide>\\n  </ssr-carousel>\\n</div>\\n\",\"language\":\"vue\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<div style=\\\"overflow: hidden\\\">\\n  <ssr-carousel\\n    :slides-per-page=\\\"2\\\"\\n    paginate-by-slide\\n    gutter=\\\"20\\\"\\n    peek-left=\\\"var(--fluid-gutter)\\\"\\n    peek-right=\\\"20%\\\"\\n    overflow-visible\\n    :responsive=\\\"[\\n      {\\n        maxWidth: 768,\\n        slidesPerPage: 1,\\n        gutter: 10,\\n      }\\n    ]\\\">\\n    <slide :index=\\\"1\\\"></slide>\\n    <slide :index=\\\"2\\\"></slide>\\n    <slide :index=\\\"3\\\"></slide>\\n    <slide :index=\\\"4\\\"></slide>\\n    <slide :index=\\\"5\\\"></slide>\\n  </ssr-carousel>\\n</div>\\n\"}]}]}],\"toc\":{\"title\":\"\",\"searchDepth\":2,\"depth\":2,\"links\":[{\"id\":\"basic-peeking\",\"depth\":2,\"text\":\"Basic peeking\"},{\"id\":\"peeking-with-loop\",\"depth\":2,\"text\":\"Peeking with loop\"},{\"id\":\"peeking-slides-may-be-cloned\",\"depth\":2,\"text\":\"Peeking slides may be cloned\"},{\"id\":\"peeking-values-are-responsive-and-support-css-units\",\"depth\":2,\"text\":\"Peeking values are responsive and support CSS units\"},{\"id\":\"sync-with-gutter-setting\",\"depth\":2,\"text\":\"Sync with gutter setting\"},{\"id\":\"supply-your-own-overflowhidden\",\"depth\":2,\"text\":\"Supply your own overflow:hidden\"}]}},\"_type\":\"markdown\",\"_id\":\"content:peeking.md\",\"_source\":\"content\",\"_file\":\"peeking.md\",\"_extension\":\"md\"},\"hash\":\"OsxHLs1TE5\"}";

export { peeking as default };
//# sourceMappingURL=peeking.mjs.map
